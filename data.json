[
	{
		"id"	: "array",
		"name"	: "Array",
		"memory": "contiguous",
		"ops"	: { "search":N, "append":1, "insert":n, "remove":n },
		"aka"	: [ "static array" ],
		"lang"	: {
			".NET"	: "[]",
			"C++"	: "[]",
			"Java"	: "[]",
			"Python": "list"
		}
	},
	
	{
		"id"	: "dynamic array",
		"name"	: "Dynamic Array",
		"memory": "contiguous",
		"ops"	: { "search":N, "append":1, "insert":n, "remove":n },
		"aka"	: [ "array list", "growable array", "resizable array" ],
		"lang"	: {
			".NET"	: "List<>",
			"C++"	: "std::vector<>",
			"Java"	: "ArrayList<>",
			"Python": "list"
		}
	},
	
	{
		"id"	: "linkedlist",
		"name"	: "Linked List",
		"memory": "linked",
		"ops"	: { "search":N, "append":1, "insert":n, "remove":n },
		"lang"	: {
			".NET"	: "LinkedList<>",
			"C++"	: "std::list<>",
			"Java"	: "LinkedList<>"
		}
	},
	
	{
		"id"	: "hashtable",
		"name"	: "Hashtable",
		"memory": "contiguous",
		"aka"	: [ "hash map", "dictionary" ],
		"ops"	: { "search":1, "insert":1, "remove":1 },
		"lang"	: {
			".NET"	: "Dictionary<>",
			"C++"	: "unordered_map<>",
			"Java"	: "HashMap<>",
			"Python": "dict"
		}
	},
	
	{
		"id"	: "queue",
		"name"	: "Queue",
		"memory": "contiguous",
		"ops"	: { "peek":1, "enqueue":1, "dequeue":1 },
		"adt"	: [ "linkedlist", "array", "dynamicarray" ]
		"lang"	: {
			".NET"	: "Queue<>",
			"C++"	: "std::queue<>",
			"Java"	: "LinkedList<>",
			"Python": "list"
		}
	},
	
	{
		"id"	: "stack",
		"name"	: "Stack",
		"memory": "contiguous",
		"ops"	: { "peek":1, "push":1, "pop":1 },
		"adt"	: [ "linkedlist", "array", "dynamicarray" ]
		"lang"	: {
			".NET"	: "Stack<>",
			"C++"	: "std::stack<>",
			"Java"	: "Stack<>",
			"Python": "list"
		}
	},

	{
		"id"	: "binarysearchtree",
		"name"	: "Binary Search Tree",
		"memory": "linked",
		"ops"	: { "search":log_2 N, "add":log_2 N, "remove":log_2 N },
		"lang"	: {
		}
	}
]