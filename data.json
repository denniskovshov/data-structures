var data = [
	{
		"id"	: "array",
		"name"	: "Array",
		"memory": "contiguous",
		"ops"	: { "search":"n", "append":"1", "insert":"n", "delete":"n" },
		"aka"	: [ "static array", "linear array", "one-dimensional array" ],
		"lang"	: {
			".NET"	: "[]",
			"C++"	: "[]",
			"Java"	: "[]",
			"Python": "list"
		}
	},
	
	{
		"id"	: "dynamic array",
		"name"	: "Dynamic Array",
		"memory": "contiguous",
		"ops"	: { "search":"n", "append":"1", "insert":"n", "delete":"n" },
		"aka"	: [ "array list", "growable array", "resizable array" ],
		"lang"	: {
			".NET"	: "List<>",
			"C++"	: "vector<>",
			"Java"	: "ArrayList<>",
			"Python": "list"
		}
	},
	
	{
		"id"	: "linkedlist",
		"name"	: "Linked List",
		"memory": "linked",
		"ops"	: { "search":"n", "append":"1", "insert":"n", "delete":"n" },
		"lang"	: {
			".NET"	: "LinkedList<>",
			"C++"	: "list<>",
			"Java"	: "LinkedList<>"
		}
	},
	
	{
		"id"	: "hashtable",
		"name"	: "Hash Table",
		"aka"	: [ "hash map", "dictionary" ],
		"ops"	: { "search":"1", "insert":"1", "delete":"1" },
		"lang"	: {
			".NET"	: "Dictionary<>",
			"C++"	: "unordered_map<>",
			"Java"	: "HashMap<>",
			"Python": "dict"
		}
	},
	
	{
		"id"	: "queue",
		"name"	: "Queue",
		"ops"	: { "search":"n", "insert":"1", "delete":"1" },
		"adt"	: [ "linked list", "array" ],
		"aka"	: [ "FIFO" ],
		"lang"	: {
			".NET"	: "Queue<>",
			"C++"	: "queue<>",
			"Java"	: "LinkedList<>",
			"Python": "list"
		}
	},
	
	{
		"id"	: "stack",
		"name"	: "Stack",
		"ops"	: { "search":"n", "insert":"1", "delete":"1" },
		"adt"	: [ "linked list", "array" ],
		"aka"	: [ "LIFO" ],
		"lang"	: {
			".NET"	: "Stack<>",
			"C++"	: "stack<>",
			"Java"	: "Stack<>",
			"Python": "list"
		}
	}
/*
	{
		"id"	: "binarysearchtree",
		"name"	: "Binary Search Tree",
		"ops"	: { "search":"log_2 N", "add":"log_2 N", "delete":"log_2 N" },
		"lang"	: {
		}
	}
*/
]